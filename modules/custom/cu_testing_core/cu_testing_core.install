<?php

/**
 * Implemenets hook_enable().
 */
function cu_testing_core_enable() {

}

/**
 * Implements hook_install().
 */
function cu_testing_core_install() {

  theme_enable(array(
    'cuhighlight',
    'cuivory',
    'culayers',
    'cuminimal',
    'cumodern',
    'curise',
    'cushadow',
    'cusimple',
    'cuspirit',
    'cuswatch',
    'cutradition',
  ));

  // these modules need to be enabled late in the install process and/or to be ignored by profile_module_manager's report.
  $module_array = array(
    'user_external_invite', // Added to not enable in Pantheon Core.
    'cu_users',
    'cu_inventory',
    'cu_inventory_stats' // Not adding caching modules here for changes involving Travis CI testing.
  );

  module_enable($module_array);

  profile_module_manager_add_to_ignore($module_array);

  //set default variables for user_external_invite
  if (db_table_exists('user_external_invite') && !db_field_exists('user_external_invite', 'message')) {
    $spec = array(
      'type' => 'text',
      'description' => "Custom message included with invite",
      'not null' => FALSE,
    );
    db_add_field('user_external_invite', 'message', $spec);
  }

  // Add id and drop mail as primary key.
  if (db_table_exists('user_external_invite') && !db_field_exists('user_external_invite', 'id')) {
    db_drop_primary_key('user_external_invite');
    $spec = array(
      'type' => 'serial',
      'description' => 'Primary key of the Project entity',
      'unsigned' => TRUE,
      'not null' => TRUE,
    );
    db_add_field('user_external_invite', 'id', $spec, array('primary key' => array('id')));
  }

  // change for #FIT-583 for https://www.drupal.org/node/2172293
  // Must be set before cu_forms_bundle is enabled
  variable_set('webform_install_add_body_field', TRUE);

  variable_set('site_name', 'University of Colorado Boulder');
  variable_set('site_name_1', 'University of Colorado Boulder');
  variable_set('site_slogan', 'University of Colorado Boulder');

  variable_set('express_help_base_url', 'http://www.colorado.edu/webcentral');

  variable_set('profile_module_manager_ignore', 'secure_permissions, express_permissions, cu_users, cu_core, cu_help, cu_inventory, cu_inventory_stats, cu_custom_logo, varnish, memcache, cu_redirect');

  // Set message for when enabling of bundles is turned off.
  variable_set('profile_module_manager_disable_enabling_text', 'Due to unexpectedly high load on the servers, the option to enable bundles has temporarily been disabled.  Please check back tomorrow.');

  // Set default variables for user_external_invite.
  $site_owner_role = user_role_load_by_name('site_owner');
  $content_editor_role = user_role_load_by_name('content_editor');
  $edit_my_content_role = user_role_load_by_name('edit_my_content');

  variable_set('user_external_invite_roles', array(
    $site_owner_role->rid,
    $content_editor_role->rid,
    $edit_my_content_role->rid
  ));
  variable_set('user_external_invite_days_valid_for', 5);

  variable_set('user_external_invite_invite_template', '[user_external_invite:invite_custom]

You have been invited to join the [site:name] Web Express website as an editor with [user_external_invite:invite_role] access privileges.

To accept this invitation:
1) Go to [user_external_invite:invite_link]
2) Login with your IdentiKey name and password.

Upon completion, you will receive an email confirming your access.

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');

  variable_set('user_external_invite_confirmation_template', 'We have received your request to grant [user_external_invite:invite_role] access to the following:

[user_external_invite:invited_emails]

An email invitation has been sent requesting the user to login and accept the invitation. Upon completion, a confirmation email will be sent.

If you did not submit this request or need to modify it, please contact us at websupport@colorado.edu.

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');

  variable_set('user_external_invite_accepted_template', 'We are confirming [user_external_invite:invited_email] now has [user_external_invite:invite_role] access to the [site:name], [site:url], website.

Web Central:
You can use the Web Central website as your main resource for step-by-step tutorials, information on training sessions, and requesting help. http://www.colorado.edu/webcentral

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');

  variable_set('user_external_invite_accepted_confirmation_template', 'You have successfully joined the [site:name] Web Express website as an editor with [user_external_invite:invite_role] access privileges.

To access and edit this site:
1) Go to [site:login-url]
2) Login with your IdentiKey name and password.

Web Central:
You can use the Web Central website as your main resource for step-by-step tutorials, information on training sessions, and requesting help. http://www.colorado.edu/webcentral

--
The Web Express Team
http://www.colorado.edu/webcentral
websupport@colorado.edu');

  // Set the syslog_identity variable to the SID.
  $cu_sid = variable_get('cu_sid', '');
  if ($cu_sid) {
    // Current value
    $syslog_identity = 'drupal-' . $cu_sid;
  }
  else {
    $syslog_identity = 'drupal-no_sid';
  }
  variable_set('syslog_identity', $syslog_identity);
  // Key for 'LOG_LOCAL0' in the form.
  variable_set('syslog_facility', '128');
  variable_set('syslog_format','!base_url|!timestamp|!type|!ip|!request_uri|!referer|!uid|!link|!message');

  // Set variable for disabling certain messages from users.
  variable_set('disable_messages_ignore_regex', array(
    '/^Metatag support has been enabled for the .*?$/i',
    '/^You can now .+configure the CAPTCHA module.+ for your site.$/i',
    '/^Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.$/i',
  ));
  variable_set('disable_messages_ignore_patterns', 'Metatag support has been enabled for the .+
You can now .+configure the CAPTCHA module.+ for your site.
Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.');

  variable_set('express_layout_node_type_ignore', array('file'));

  db_update('responsive_preview')
    ->fields(array('status' => 0,))
  ->execute();

  db_update('responsive_preview')
    ->fields(array('status' => 1,))
    ->condition(db_or()
      ->condition('name', 'medium')
      ->condition('name', 'small')
    )
  ->execute();
}

/**
 * Variable sets for Express transition.
 */
function cu_testing_core_update_7001() {

  variable_set('express_help_base_url', 'https://www.colorado.edu/webcentral');

  variable_set('profile_module_manager_ignore', 'secure_permissions, express_permissions, cu_users, cu_core, cu_help, cu_inventory, cu_inventory_stats, express_final');

  // Set SEO bundle to be hidden in bundle list form.
  variable_set('profile_module_manager_bundle_ignore', array('cu_seo_bundle' => 'cu_seo_bundle'));
  // Set message for when enabling of bundles is turned off.
  variable_set('profile_module_manager_disable_enabling_text', 'Due to unexpectedly high load on the servers, the option to enable bundles has temporarily been disabled.  Please check back tomorrow.');

  // Set variable for disabling certain messages from users.
  variable_set('disable_messages_ignore_regex', array(
    '/^Metatag support has been enabled for the .*?$/i',
    '/^You can now .+configure the CAPTCHA module.+ for your site.$/i',
    '/^Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.$/i',
  ));
  variable_set('disable_messages_ignore_patterns', 'Metatag support has been enabled for the .+
You can now .+configure the CAPTCHA module.+ for your site.
Note that the CAPTCHA module disables .+page caching.+ of pages that include a CAPTCHA challenge.');
}

/**
 * Express Update 7002.
 * Removing cu_default_image_style_override and grid_images.
 * Cleanup sites migrated for Express transition.
 */
function cu_testing_core_update_7002() {

  // Disable grid_images, cu_default_image_style_override modules.
  module_disable(array(
    'grid_images',
    'cu_default_image_style_override',
  ));

  // Uninstall grid_images, cu_default_image_style_override modules.
  drupal_uninstall_modules(array(
    'grid_images',
    'cu_default_image_style_override',
  ));

  variable_set('express_layout_node_type_ignore', array('file'));

  module_disable(array('diff', 'quicktabs_tabstyles', 'views_ui', 'environment', 'client_ui_control', 'color'));

  module_enable(array('cu_googleanalytics'));

  // Makes sure blocks are set properly on structure/blocks for all new themes
  // This is also in hook_themes_enabled in express.profile, but some sites may not
  // have seen express as enabled when new themes were added
  $query = db_update('block')
    ->fields(array(
      'region' => '-1',
      'status' => '0',
    ))
    ->execute();
  $query = db_update('block')
    ->fields(array(
      'region' => 'content',
      'status' => '1',
    ))
    ->condition('delta', 'main')
    ->execute();
  $query = db_update('block')
    ->fields(array(
      'region' => 'help',
      'status' => '1',
    ))
    ->condition('delta', 'help')
    ->execute();

  cu_core_revert_features();

  // Run on every update
  _express_inventory_update('7002');
}

/**
 * Updates for Express 2.0.1.
 */
function cu_testing_core_update_7003() {

  // Uninstall unused modules.
  drupal_uninstall_modules(array(
    'cu_block_selector',
    'cu_transition_express',
    'overlay',
  ));

  // Uninstall modules that had dependencies on modules above.
  drupal_uninstall_modules(array(
    'cu_transition_fit',
  ));

  variable_set('profile_module_manager_ignore', 'secure_permissions, express_permissions, cu_users, cu_core, cu_help, cu_inventory, cu_inventory_stats, express_final, cu_custom_logo, varnish, memcache');

  // Run on every update
  _express_inventory_update('7003');
}

/**
 * Enable CU Redirect module.
 * Disable, Uninstall More Menus, CU Shortcuts modules.
 * Remove duplicates in shortcut menu
 * Express 2.1.0
 */
function cu_testing_core_update_7004() {
  module_enable(array('cu_redirect'));
  module_disable(array('more_menus', 'cu_shortcuts'));
  drupal_uninstall_modules(array(
    'more_menus',
    'cu_shortcuts',
  ));

  variable_set('profile_module_manager_ignore', 'secure_permissions, express_permissions, cu_users, cu_core, cu_help, cu_inventory, cu_inventory_stats, express_final, cu_custom_logo, varnish, memcache, entityreference, express_layout, cu_ldap, ldap_authentication, ldap_servers');

  // Remove duplicates in shortcut menu
  $shortcuts = array();
  $query = db_select('menu_links', 'ml');
  $query->fields('ml', array('menu_name', 'mlid', 'link_path'));
  $query->condition('ml.menu_name', 'shortcut-set-1', '=');
  $results = $query->execute()->fetchAll();
  foreach ($results as $result) {
    $shortcuts[$result->link_path][] = $result->mlid;
  }
  foreach ($shortcuts as $shortcut) {
    if (isset($shortcut[1])) {
      menu_link_delete($shortcut[1]);
    }
  }

  // Run on every update
  _express_inventory_update('7004');
}

/**
 * Express Update 7005.
 * Removing cu_livechat module, enabling responsive_preview, reverting features
 */
function cu_testing_core_update_7005() {
  // Disable cu_livechat module.
  module_disable(array(
    'cu_livechat',
  ));

  // Uninstall cu_livechat module.
  drupal_uninstall_modules(array(
    'cu_livechat',
  ));

  module_enable(array('responsive_preview'));

  db_update('responsive_preview')
    ->fields(array('status' => 0,))
  ->execute();

  db_update('responsive_preview')
    ->fields(array('status' => 1,))
    ->condition(db_or()
      ->condition('name', 'medium')
      ->condition('name', 'small')
    )
  ->execute();

  cu_core_revert_features();

  // Run on every update
  _express_inventory_update('7005');
}

/**
 * Revert features by passing features in an array.
 */
function cu_testing_core_revert_features($features = NULL) {
  // If an array of specific features isn't passed, populate with all overridden features.
  if ($features == NULL) {
    module_load_include('inc', 'features', 'features.export');
    $features = features_get_features();
    foreach ($features as $feature) {
      if (features_get_storage($feature->name) == 0) {
        unset($features[$feature->name]);
      }
    }
  }
  // Check against features that currently can't be reverted.
  $protected_features = array(
    'cu_home_page',
    'cu_sitewide',
  );
  foreach ($features as $key => $feature) {
    if (!in_array($key, $protected_features)) {
      $f = features_get_features($key);
      $components = array_keys($f->info['features']);
      features_revert(array($f->name => $components));
      watchdog('cu_core', 'Attempting to revert %feature', array('%feature' => $feature->name), WATCHDOG_NOTICE);
    }
  }
}

/**
 * Updates inventory with profile version.
 */
function _express_inventory_update($version) {
  // Do at the end of every update.
  module_load_include('inc', 'cu_inventory');
  cu_inventory_process_profile_version($version);
}
