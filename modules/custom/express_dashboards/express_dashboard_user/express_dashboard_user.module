<?php

/**
 * @file
 * Contains Drupal hooks for express_dashboards_user module.
 */

/**
 * Implements hook_user_login().
 *
 * Send user to dashboard after logging in.
 */
function express_dashboard_user_user_login(&$edit, $account) {
  // Your logic will set $redirection to the desired location
  $redirection = 'admin/dashboard/user';

  // Unless there is already a redirection going, or the user is trying to reset his password, we redirect to $redirection.
  if (empty($_GET['destination'])
    && !is_null($redirection)
    && (!isset($_POST['form_id']) || $_POST['form_id'] != 'user_pass_reset')
  ) {
    $edit['redirect'] = $redirection;
  }
}

/**
 * Implements hook_express_dashboard().
 *
 * Adding user Dashboard.
 */
function express_dashboard_user_express_dashboard($variables) {
  $variables['user'] = array(
    'title' => 'User',
    'callback' => 'express_dashboard_user_content',
    'weight' => -99,
    'access arguments' => array('use user dashboard'),
  );
  return $variables;
}

/**
 * Implements hook_permission().
 */
function express_dashboard_user_permission() {
  return array(
    'use user dashboard' => array(
      'title' => 'Use the User Dashboard',
      'description' => 'Access the user dashboard',
    ),
  );
}

/**
 * Callback function for user dashboard.
 */
function express_dashboard_user_content() {
  global $user;
  $vars['user'] = (array) $user;
  $excluded_roles = array(
    'authenticated user',
  );
  foreach ($vars['user']['roles'] as $rid => $role) {
    if (in_array($role, $excluded_roles)) {
      unset($vars['user']['roles'][$rid]);
    }
  }

  // Begin working on Webcentral dashboard.
  $output['left']['widgets']['my_sites']['title'] = 'My Sites';
  $output['left']['widgets']['my_sites']['content']['#markup'] = _user_sites_from_atlas($user);

  // Add status.
  $express_status = module_invoke('express_status', 'block_view', 'express_status');
  $output['right']['widgets']['status']['title'] = 'System Status';
  $output['right']['widgets']['status']['content']['#markup'] = $express_status['content'];

  // Add who's online block content to user tab of dashboard.
  $users_online = module_invoke('user', 'block_view', 'online');
  $output['right']['widgets']['online']['title'] = 'Who\'s online';
  $output['right']['widgets']['online']['content']['#markup'] = $users_online['content'];
  // Display real name if available.
  $output['right']['widgets']['user']['title'] = function_exists('realname_load') ? realname_load($user) : $user->name;
  $output['right']['widgets']['user']['content']['#markup'] = theme('express_dashboard_user_profile', (array) $vars);

  return $output;
}

/**
 * Callback for My Sites widget on express_dashboard_user_content.
 */
function _user_sites_from_atlas(&$user) {
  global $base_url;

  $output = '';
  switch ($base_url) {
    case 'https://www-dev.colorado.edu':
      $env = 'https://osr-atlas01.int.colorado.edu';
      break;

    case 'https://www-test.colorado.edu':
      $env = 'https://osr-atlas02.int.colorado.edu';
      break;

    case 'https://www.colorado.edu':
      $env = 'https://osr-atlas03.int.colorado.edu';
      break;

    default:
      $env = 'https://osr-atlas03.int.colorado.edu';
  }

  $query = '';
  $user_roles = array(
    'content_editor',
    'edit_my_content',
    'site_contact',
  );
  foreach ($user_roles as $role_name) {
    $link = $env . '/atlas/statistics?where={"users.username.' . $role_name . '":"' . $user->name . '"}';
    $query .= '<a href="' . $link . '" target="_blank">' . $role_name . '</a><br><br>';
    $http_output[] = drupal_http_request($link);
  }

  foreach ($http_output as $data) {
    $json_info = json_decode($data->data);
    if (isset($json_info->_items)) {
      foreach ($json_info->_items as $site) {
        $link = $env . '/atlas/sites/' . $site->site;
        $atlas_sites[] = $link;
      }
    } else {
      $atlas_sites = array();
      break;

    }
  }

  // Now get Atlas data for the sites so we can retrieve a path.
  // https://youtu.be/2UbtcmjfKa8?t=3m41s
  foreach ($atlas_sites as $site) {
    $atlas_sites_output = drupal_http_request($site);
    $json_info = json_decode($atlas_sites_output->data);
    switch ($env) {
      case 'https://osr-atlas01.int.colorado.edu':
        $link_builder = 'https://www-dev.colorado.edu/' . $json_info->path;
        break;

      case 'https://osr-atlas02.int.colorado.edu':
        $link_builder = 'https://www-test.colorado.edu/' . $json_info->path;
        break;

      case 'https://osr-atlas03.int.colorado.edu':
        $link_builder = 'https://www.colorado.edu/' . $json_info->path;
        break;
        
      default:
        $link_builder = 'https://osr-atlas03.int.colorado.edu';
    }
    $login = $link_builder . '/user';

    $output .= '<div class="atlas-user-sites"><h3>' . $json_info->path . '</h3><p><a href="' . $link_builder . '" target="_blank">Visit</a><a href="' . $login . '" target="_blank">Login</a></p></div>';
  }

  return $output;
}

/**
 * Implements hook_theme().
 *
 * Adds theme functions and tempalte files for dashboards
 */
function express_dashboard_user_theme(&$existing, $type, $theme, $path) {
  $registry = array();
  $template_dir = drupal_get_path('module', 'express_dashboard_user') . '/templates';
  $registry['express_dashboard_user_profile'] = array(
    'template' => 'express-dashboard-user-profile',
    'path' => $template_dir,
    'render element' => 'elements',
  );
  return $registry;
}

/**
 * Define site permissions in code.
 *
 * Create a secure_permissions_data module directory and place this function
 * in secure_permissions_data.module.
 *
 * @param $role
 *   The role for which the permissions are being requested.
 *
 * @return
 *   An array defining all the permissions for the site.
 */

function express_dashboard_user_secure_permissions($role) {

  $permissions = array(
    'authenticated user' => array(
      'use user dashboard',
    ),
    'administrator' => array(
      'use user dashboard',
    ),
    'content_editor' => array(
      'use user dashboard',
    ),
    'developer' => array(
      'use user dashboard',
    ),
    'edit_my_content' => array(
      'use user dashboard',
    ),
    'site_owner' => array(
      'use user dashboard',
    ),
  );

  if (isset($permissions[$role])) {
    return $permissions[$role];
  }
}

/**
 * Implements hook_theme_registry_alter().
 *
 * Make site aware that we have templates.
 */
function express_dashboard_user_theme_registry_alter(&$theme_registry) {
  $module_path = drupal_get_path('module', 'express_dashboard_user');
  $theme_registry_copy = $theme_registry;
  _theme_process_registry($theme_registry_copy, 'phptemplate', 'theme_engine', 'dashboard', $module_path);
  $theme_registry += array_diff_key($theme_registry_copy, $theme_registry);
  $hooks = array('node');
  foreach ($hooks as $h) {
    if (isset($theme_registry[$h]['theme paths'])) {
      array_unshift($theme_registry[$h]['theme paths'], array_shift($theme_registry[$h]['theme paths']), $module_path);
    }
  }
}

/**
 * Implements hook_user_view().
 */
function express_dashboard_user_user_view($account) {
  global $user;
  if ($account->uid == $user->uid) {
    drupal_goto('admin/dashboard');
  }

}
