<?php
/**
 * @file
 * Code for the CU Sitewide Required feature.
 */

include_once 'cu_sitewide_required.features.inc';

/**
 * Implements hook_permission().
 */
function cu_sitewide_required_permission() {
  return array(
    'edit locked contexts' => array(
      'title' => t('Edit locked contexts'),
      'description' => t('Any context tagged with \'locked\' will only be editable by those with this permission.'),
    ),
  );
}

/**
 * Process theme variables for a specific theme hook.
 *
 * This hook allows modules to process theme variables for a specific theme
 * hook. It should only be used if a module needs to override or add to the
 * theme processing for a theme hook it didn't define.
 *
 * Implements theme_process_table().
 *
 * For more detailed information, see theme().
 *
 * @param $variables
 *   The variables array (modify in place).
 */
function cu_sitewide_required_process_table(&$variables) {
  // On the context administration table
  // The first part of this if statement will get rid of that pesky notice.
  if (array_key_exists('id', $variables['attributes']) && isset($variables['attributes']['id'])) {
    if (isset($variables['attributes']['class'])) {
      if ($variables['attributes']['id'] == 'ctools-export-ui-list-items' && in_array('context-admin', $variables['attributes']['class'])) {
        // If no access to edit locked contexts, remove them from the table.
        // This only removes them from the UI, access is controlled via cu_sitewide_menu_alter().
        if (!user_access('edit locked contexts')) {
          foreach ($variables['rows'] as $key => $row) {
            if (substr($key, 0, 6) == 'locked') {
              unset($variables['rows'][$key]);
            }
          }
        }
      }
    }
  }
}

/**
 * Alter the data being saved to the {menu_router} table after hook_menu is invoked.
 *
 * This hook is invoked by menu_router_build(). The menu definitions are passed
 * in by reference. Each element of the $items array is one item returned
 * by a module from hook_menu. Additional items may be added, or existing items
 * altered.
 *
 * @param $items
 *   Associative array of menu router definitions returned from hook_menu().
 */
function cu_sitewide_required_menu_alter(&$items) {
  // Only allow people who can edit locked contexts to change context settings.
  if (!empty($items['admin/structure/context/settings'])) {
    $items['admin/structure/context/settings']['access arguments'] = array('edit locked contexts');
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Set access denied on context's whose tag is 'locked' and user doesnt have permission.
 */
function cu_sitewide_required_form_ctools_export_ui_edit_item_form_alter(&$form, &$form_state, $form_id) {
  if ($form_state['item']->table == 'context' && $form_state['item']->tag == 'locked' && !user_access('edit locked contexts')) {
    $form['#access'] = FALSE;
    drupal_access_denied();
  }
}
